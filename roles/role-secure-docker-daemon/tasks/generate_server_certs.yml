# generate_server_certs.yml 

- name: Create server key
  command: creates="{{ dds_temp_path }}/key.pem" openssl genrsa -out {{ dds_temp_path }}/key.pem 4096

- name: Create the server CSR 
  command: "creates=\"{{ dds_temp_path }}/server.csr\" openssl req -subj '/CN={{ dds_host }}' -sha256 -new -key {{ dds_temp_path }}/key.pem -out {{ dds_temp_path }}/server.csr"

# - name: Remove extfile
#   file:
#     state: absent
#     path: "{{ dds_extfile }}" 

- name: Create extfile
  file:
    state: touch 
    path: "{{ dds_extfile }}" 
  changed_when: false

- name: Add alt name to extfile
  lineinfile:
    dest: "{{ dds_extfile }}" 
    line: "subjectAltName = IP:{{ dds_host }},IP:127.0.0.1"

- name: Create the server certificate 
  command: "creates=\"{{ dds_temp_path }}/cert.pem\" openssl x509 -req -days 365 -sha256 -in {{ dds_temp_path }}/server.csr -CA {{ dds_temp_path }}/ca.pem -CAkey {{ dds_temp_path }}/ca-key.pem -CAcreateserial -out {{ dds_temp_path}}/cert.pem -extfile {{ dds_temp_path}}/extfile.cnf -passin file:{{ dds_passphrase_file }}"

- name: Check that the server cert path exists
  file:
    state: directory
    path: "{{ dds_server_cert_path }}"

# - name: Copy server certs
#   command: cp "{{ dds_temp_path }}/{{ item }}" "{{ dds_server_cert_path }}/."
#   with_items:
#     - ca.pem
#     - cert.pem
#     - key.pem
- name: Copy server certs
  copy: 
    src: "{{ dds_temp_path }}/{{ item }}"
    remote_src: true
    dest: "{{ dds_server_cert_path }}/."
  with_items:
    - ca.pem
    - cert.pem
    - key.pem

- name: Set file permissions 
  file:
    path: "{{ dds_server_cert_path }}/{{ item }}"
    mode: 0400
  with_items:
    - ca.pem
    - cert.pem
    - key.pem
