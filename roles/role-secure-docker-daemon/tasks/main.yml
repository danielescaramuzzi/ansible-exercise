---
# main.yml

- name: Create a tempdir
  file:
    state: directory
    path: "{{ dds_temp_path }}"   

- name: Create passphrase file
  file:
    state: touch
    path: "{{ dds_passphrase_file }}" 
  changed_when: false

- name: Add passphrase to the file
  lineinfile:
    dest: "{{ dds_passphrase_file }}"
    line: "{{ dds_passphrase }}" 

- name: Generate ca-key.pem
  command: "creates=\"{{ dds_temp_path }}/ca-key.pem\" openssl genrsa -aes256 -passout file:{{ dds_passphrase_file }} -out {{ dds_temp_path }}/ca-key.pem 4096"

- name: Generate ca certificate   
  command: "creates=\"{{ dds_temp_path }}/ca.pem\" openssl req -new -x509 -days 365 -key {{ dds_temp_path }}/ca-key.pem -sha256 -out {{ dds_temp_path }}/ca.pem -passin file:{{ dds_passphrase_file }} -subj '/C={{ dds_country }}/ST={{dds_state }}>/L={{ dds_locality }}/O={{ dds_organization }}/CN={{ dds_common_name }}'"

- include: generate_server_certs.yml
- include: generate_client_certs.yml

- name: Copy cert file
  fetch:
    src: "/root/.docker/ca.pem"
    dest: "~/my_certificate_directory"
    remote_src: true
- name: Copy cert file
  fetch:
    src: "/root/.docker/cert.pem"
    dest: "~/my_certificate_directory"
    remote_src: true
- name: Copy cert file
  fetch:
    src: "/root/.docker/key.pem"
    dest: "~/my_certificate_directory"
    remote_src: true

- name: "Push the Docker daemon config to Server"
  template:
    src: docker.service
    dest: /lib/systemd/system/docker.service
  become: yes
  notify: Restart the docker daemon 
